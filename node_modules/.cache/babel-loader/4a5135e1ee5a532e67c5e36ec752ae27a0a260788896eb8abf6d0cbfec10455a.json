{"ast":null,"code":"var _jsxFileName = \"/Users/Iurian/Date/CHALENGES/InPROGRESS/news-homepage-main/news/src/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport { links } from \"./data\";\nimport logo from \"./logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [showLinks, setShowLinks] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n  const menuHamburger = document.getElementById(\"logo\");\n  const menu = document.getElementById(\"links-container\");\n  const toggleLinks = () => {\n    setShowLinks(!showLinks);\n  };\n  useEffect(() => {\n    const linksHeight = linksRef.current.getBoundingClientRect().height;\n    if (showLinks) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [showLinks]);\n  document.addEventListener(\"click\", event => {\n    // if (\n    //   showLinks &&\n    //   !event.target.isEqualNode(menuHamburger) &&\n    //   !event.target.isEqualNode(menu) &&\n    //   !menu.contains(event.target)\n    // ) {\n    //   toggleLinks();\n    // }\n    toggleLinks();\n    // console.log(menuHamburger, menu);\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"nav-toggle\",\n          id: \"nav-toggle\",\n          onClick: toggleLinks,\n          children: /*#__PURE__*/_jsxDEV(FaBars, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"links-container\",\n        id: \"links-container\",\n        ref: linksContainerRef,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"links\",\n          ref: linksRef,\n          children: links.map(link => {\n            const {\n              id,\n              url,\n              text\n            } = link;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `#${url}`,\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"1lzNJVC1yAuy6B6UMw689JRZooI=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaBars","links","logo","Navbar","showLinks","setShowLinks","linksContainerRef","linksRef","menuHamburger","document","getElementById","menu","toggleLinks","linksHeight","current","getBoundingClientRect","height","style","addEventListener","event","map","link","id","url","text"],"sources":["/Users/Iurian/Date/CHALENGES/InPROGRESS/news-homepage-main/news/src/Navbar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { FaBars } from \"react-icons/fa\";\nimport { links } from \"./data\";\nimport logo from \"./logo.svg\";\n\nconst Navbar = () => {\n  const [showLinks, setShowLinks] = useState(false);\n  const linksContainerRef = useRef(null);\n  const linksRef = useRef(null);\n\n  const menuHamburger = document.getElementById(\"logo\");\n  const menu = document.getElementById(\"links-container\");\n\n  const toggleLinks = () => {\n    setShowLinks(!showLinks);\n  };\n\n  useEffect(() => {\n    const linksHeight = linksRef.current.getBoundingClientRect().height;\n    if (showLinks) {\n      linksContainerRef.current.style.height = `${linksHeight}px`;\n    } else {\n      linksContainerRef.current.style.height = \"0px\";\n    }\n  }, [showLinks]);\n\n  document.addEventListener(\"click\", (event) => {\n    // if (\n    //   showLinks &&\n    //   !event.target.isEqualNode(menuHamburger) &&\n    //   !event.target.isEqualNode(menu) &&\n    //   !menu.contains(event.target)\n    // ) {\n    //   toggleLinks();\n    // }\n    toggleLinks();\n    // console.log(menuHamburger, menu);\n  });\n\n  return (\n    <nav>\n      <div className=\"nav-center\">\n        <div className=\"nav-header\">\n          <img src={logo} className=\"logo\" alt=\"logo\" />\n          <button className=\"nav-toggle\" id=\"nav-toggle\" onClick={toggleLinks}>\n            <FaBars />\n          </button>\n        </div>\n        <div\n          className=\"links-container\"\n          id=\"links-container\"\n          ref={linksContainerRef}\n        >\n          <ul className=\"links\" ref={linksRef}>\n            {links.map((link) => {\n              const { id, url, text } = link;\n              return (\n                <li key={id}>\n                  <a href={`#${url}`}>{text}</a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,KAAK,QAAQ,QAAQ;AAC9B,OAAOC,IAAI,MAAM,YAAY;AAAC;AAE9B,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,iBAAiB,GAAGR,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMS,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMU,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EACrD,MAAMC,IAAI,GAAGF,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;EAEvD,MAAME,WAAW,GAAG,MAAM;IACxBP,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAGN,QAAQ,CAACO,OAAO,CAACC,qBAAqB,EAAE,CAACC,MAAM;IACnE,IAAIZ,SAAS,EAAE;MACbE,iBAAiB,CAACQ,OAAO,CAACG,KAAK,CAACD,MAAM,GAAI,GAAEH,WAAY,IAAG;IAC7D,CAAC,MAAM;MACLP,iBAAiB,CAACQ,OAAO,CAACG,KAAK,CAACD,MAAM,GAAG,KAAK;IAChD;EACF,CAAC,EAAE,CAACZ,SAAS,CAAC,CAAC;EAEfK,QAAQ,CAACS,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;IAC5C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAP,WAAW,EAAE;IACb;EACF,CAAC,CAAC;;EAEF,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACzB;UAAK,GAAG,EAAEV,IAAK;UAAC,SAAS,EAAC,MAAM;UAAC,GAAG,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG,eAC9C;UAAQ,SAAS,EAAC,YAAY;UAAC,EAAE,EAAC,YAAY;UAAC,OAAO,EAAEU,WAAY;UAAA,uBAClE,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA,QACL,eACN;QACE,SAAS,EAAC,iBAAiB;QAC3B,EAAE,EAAC,iBAAiB;QACpB,GAAG,EAAEN,iBAAkB;QAAA,uBAEvB;UAAI,SAAS,EAAC,OAAO;UAAC,GAAG,EAAEC,QAAS;UAAA,UACjCN,KAAK,CAACmB,GAAG,CAAEC,IAAI,IAAK;YACnB,MAAM;cAAEC,EAAE;cAAEC,GAAG;cAAEC;YAAK,CAAC,GAAGH,IAAI;YAC9B,oBACE;cAAA,uBACE;gBAAG,IAAI,EAAG,IAAGE,GAAI,EAAE;gBAAA,UAAEC;cAAI;gBAAA;gBAAA;gBAAA;cAAA;YAAK,GADvBF,EAAE;cAAA;cAAA;cAAA;YAAA,QAEN;UAET,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACC;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GA9DInB,MAAM;AAAA,KAANA,MAAM;AAgEZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}